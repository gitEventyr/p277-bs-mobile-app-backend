version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: casino-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: casino_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: casino-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Casino Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: casino-api
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      
      # Database connection
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: casino_dev
      
      # Redis connection
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Security
      SESSION_SECRET: dev-session-secret-change-in-production
      JWT_SECRET: dev-jwt-secret-change-in-production
      
      # External Services
      EMAIL_SERVICE_API_KEY: dev-email-key
      GEOLOCATION_API_KEY: dev-geo-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start:dev
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: